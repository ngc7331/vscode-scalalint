// reference: https://github.com/scalastyle/scalastyle/blob/ec14399543d2d5ccf93c3713aa5df21793844791/src/main/resources/reference.conf
export const scalastyleMessageTable = new Map<string, RegExp>([
    ['file.FileLengthChecker', /File length exceeds \d+ lines/],
    ['file.FileLineLengthChecker', /File line length exceeds \d+ characters/],
    ['file.FileTabChecker', /Line contains a tab/],
    ['file.HeaderMatchesChecker', /Header does not match expected text/],
    ['file.IndentationChecker', /Use correct indentation/],
    ['file.NewLineAtEofChecker', /File must end with newline character/],
    ['file.NoNewLineAtEofChecker', /File must not end with newline character/],
    ['file.RegexChecker', /Regular expression matched '.*'/],
    ['file.WhitespaceEndOfLineChecker', /Whitespace at end of line/],
    ['scalariform.BlockImportChecker', /Avoid block imports/],
    ['scalariform.ClassNamesChecker', /Class name does not match the regular expression '.*'/],
    ['scalariform.ClassTypeParameterChecker', /Type parameter does not match '.*'/],
    ['scalariform.CovariantEqualsChecker', /Covariant equals without overriding equals\(java\.lang\.Object\)\./],
    ['scalariform.CyclomaticComplexityChecker', /Cyclomatic complexity of \d+ exceeds max of \d+/],
    ['scalariform.DeprecatedJavaChecker', /@deprecated should be used instead of @java\.lang\.Deprecated/],
    ['scalariform.DisallowSpaceAfterTokenChecker', /Space after token .*/],
    ['scalariform.DisallowSpaceBeforeTokenChecker', /Space before token .*/],
    ['scalariform.EmptyClassChecker', /Redundant braces after class definition/],
    ['scalariform.EmptyInterpolatedStringChecker', /Unnecessary use of interpolated string/],
    ['scalariform.EnsureSingleSpaceAfterTokenChecker', /No space after token .*/],
    ['scalariform.EnsureSingleSpaceBeforeTokenChecker', /No space before token .*/],
    ['scalariform.EqualsHashCodeChecker', /You should implement equals and hashCode together/],
    ['scalariform.FieldNamesChecker', /Field name does not match the regular expression '.*'/],
    ['scalariform.ForBraceChecker', /Use braces in for comprehensions/],
    ['scalariform.IfBraceChecker', /If block needs braces/],
    ['scalariform.IllegalImportsChecker', /Import from illegal package/],
    ['scalariform.ImportGroupingChecker', /Imports should be grouped together/],
    ['scalariform.ImportOrderChecker', /Imports should be ordered according to the configuration/],
    ['scalariform.LowercasePatternMatchChecker', /Lowercase pattern match \(surround with ``, or add : Any\)/],
    ['scalariform.MagicNumberChecker', /Magic Number/],
    ['scalariform.MethodArgumentNamesChecker', /Method argument name does not match the regular expression '.*'/],
    ['scalariform.MethodLengthChecker', /Method is longer than \d+ lines/],
    ['scalariform.MethodNamesChecker', /Method name does not match the regular expression '.*'/],
    ['scalariform.MultipleStringLiteralsChecker', /The string literal .+ appears \d+ times in the file\./],
    ['scalariform.NamedArgumentChecker', /Argument should be named/],
    ['scalariform.NoCloneChecker', /Avoid using clone method\./],
    ['scalariform.NoFinalizeChecker', /Avoid using finalize method\./],
    ['scalariform.NoWhitespaceAfterLeftBracketChecker', /There should be no space after a left bracket '\['/],
    ['scalariform.NoWhitespaceBeforeLeftBracketChecker', /There should be no space before a left bracket '\['/],
    ['scalariform.NoWhitespaceBeforeRightBracketChecker', /There should be no space before a right bracket '\]'/],
    ['scalariform.NonASCIICharacterChecker', /Non ASCII characters are not allowed/],
    ['scalariform.NotImplementedErrorUsage', /Usage of \?\?\? operator/],
    ['scalariform.NullChecker', /Avoid using null/],
    ['scalariform.NumberOfMethodsInTypeChecker', /Number of methods in class exceeds \d+/],
    ['scalariform.NumberOfTypesChecker', /Number of types declared in the file exceeds \d+/],
    ['scalariform.ObjectNamesChecker', /Object name does not match the regular expression '.*'/],
    ['scalariform.OverrideJavaChecker', /You should be using the Scala override keyword instead/],
    ['scalariform.PackageNamesChecker', /Package name does not match the regular expression '.*'/],
    ['scalariform.PackageObjectNamesChecker', /Package object name does not match the regular expression '.*'/],
    ['scalariform.ParameterNumberChecker', /The number of parameters should not exceed \d+/],
    ['scalariform.PatternMatchAlignChecker', /Pattern match arrows do not align/],
    ['scalariform.ProcedureDeclarationChecker', /Use : Unit = for procedures/],
    ['scalariform.PublicMethodsHaveTypeChecker', /Public method must have explicit type/],
    ['scalariform.RedundantIfChecker', /Eliminate redundant if expressions where both branches return constant booleans/],
    ['scalariform.ReturnChecker', /Avoid using return/],
    ['scalariform.ScalaDocChecker', /Missing or badly formed ScalaDoc: .*/],
    ['scalariform.SimplifyBooleanExpressionChecker', /Boolean expression can be simplified/],
    ['scalariform.SpaceAfterCommentStartChecker', /Insert a space after the start of the comment/],
    ['scalariform.SpacesAfterPlusChecker', /There should be a space after the plus \(\+\) sign/],
    ['scalariform.SpacesBeforePlusChecker', /There should be a space before the plus \(\+\) sign/],
    ['scalariform.StructuralTypeChecker', /Avoid using structural types/],
    ['scalariform.TodoCommentChecker', /Use of TODO\/FIXME comment/],
    ['scalariform.TokenChecker', /Regular expression matched '.*' in a token/],
    ['scalariform.UnderscoreImportChecker', /Avoid wildcard imports/],
    ['scalariform.UppercaseLChecker', /Use an uppercase L for long literals/],
    ['scalariform.VarFieldChecker', /Avoid mutable fields/],
    ['scalariform.VarLocalChecker', /Avoid mutable local variables/],
    ['scalariform.WhileChecker', /Avoid using while loops/],
    ['scalariform.XmlLiteralChecker', /Avoid xml literals/],
]);
